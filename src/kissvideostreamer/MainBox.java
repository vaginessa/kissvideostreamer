package kissvideostreamer;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.GraphicsEnvironment;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import netscape.javascript.JSObject;

/**
 * 
 * @author tonikelope
 */
public class MainBox extends javax.swing.JApplet {
    
    private ProxyStreamServer streamserver;
    private JSObject JSwin;

    /**
     * Initializes the applet MainBox
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                @Override
                public void run() {
                    initComponents();
                }
            });
        } catch (InterruptedException | InvocationTargetException ex) {
        }
        
        Font font = null;
        
        try {
            font = Font.createFont(Font.TRUETYPE_FONT, this.getClass().getResourceAsStream("Gochi.ttf"));
        } catch (FontFormatException | IOException ex) {
            Logger.getLogger(MainBox.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        ge.registerFont(font);
        
        this.updateFont(this.status, font, Font.PLAIN);
        
        this.status.setForeground(new Color(0,128,0));
        
        this.JSwin = (JSObject) JSObject.getWindow(this);
        
        this.streamserver = new ProxyStreamServer(this);
        
        try {
            
            this.streamserver.start(ProxyStreamServer.DEFAULT_PORT, "/video");

        }
        catch (Exception ex) {
            Logger.getLogger(MainBox.class.getName()).log(Level.SEVERE, null, ex);
        }
                
        this.JSwin.eval("if(typeof start_vlc_player == 'function'){start_vlc_player();}");
    }
    
    public JSObject getJSwin()
    {
        return this.JSwin;
    }
    
    public void stopServer()
    {
        this.streamserver.stop();
    }
    
    private void updateFont(javax.swing.JComponent label, Font font, int layout)
    {
        label.setFont(font.deriveFont(layout, label.getFont().getSize()));
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        status = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        debug = new javax.swing.JTextArea();

        status.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        debug.setEditable(false);
        debug.setBackground(new java.awt.Color(255, 255, 204));
        debug.setColumns(20);
        debug.setRows(5);
        jScrollPane1.setViewportView(debug);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea debug;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JLabel status;
    // End of variables declaration//GEN-END:variables
}
